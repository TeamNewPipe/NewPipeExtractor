package org.schabi.newpipe.extractor.streamdata.stream;

import org.schabi.newpipe.extractor.streamdata.format.SubtitleMediaFormat;

import java.util.Locale;
import java.util.Objects;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * Represents a subtitle (only) stream.
 */
public interface SubtitleStream extends Stream<SubtitleMediaFormat> {
    /**
     * Return whether if the subtitles are auto-generated.
     * <p>
     * Some streaming services can generate subtitles for their contents, like YouTube.
     * </p>
     *
     * @return {@code true} if the subtitles are auto-generated, {@code false} otherwise
     */
    default boolean autoGenerated() {
        return false;
    }

    /**
     * Get the language code of the subtitles.
     *
     * @return the language code of the subtitles
     */
    @Nonnull
    String languageCode();

    /**
     * Get the {@link Locale locale} of the subtitles.
     *
     * <p>
     * Note: The locale is directly derived from the language-code.
     * </p>
     *
     * @return the {@link Locale locale} of the subtitles
     */
    Locale locale();

    @Override
    default boolean equalsStream(@Nullable final Stream other) {
        if (!(other instanceof SubtitleStream)) {
            return false;
        }

        final SubtitleStream otherSubtitleStream = (SubtitleStream) other;
        return Objects.equals(mediaFormat(), otherSubtitleStream.mediaFormat())
                && autoGenerated() == otherSubtitleStream.autoGenerated()
                && Objects.equals(languageCode(), otherSubtitleStream.languageCode());
    }
}
